name: cicd-actions
run-name: ${{ github.actor }} front
on:
  push:
    branches:
      - main
      - develop

env:
  STATE_BUCKET: "terraform-state-${{ secrets.APP_NAME }}"
  STATE_PATH_SUFFIX: "frontend/terraform.tfstate"
  TF_VAR_appName: ${{ secrets.APP_NAME }}

jobs:
  exec:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: env create [PROD]
        if: ${{ github.ref_name == 'main'}}
        run: |
          echo "STATE_PATH=prod/${{ env.STATE_PATH_SUFFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_comment=[PROD]${{ secrets.COMMENT }}" >> $GITHUB_ENV
          echo "TF_VAR_env=prod" >> $GITHUB_ENV
      - name: env create [DEV]
        if: ${{ github.ref_name == 'develop'}}
        run: |
          echo "STATE_PATH=dev/${{ env.STATE_PATH_SUFFIX }}" >> $GITHUB_ENV
          echo "TF_VAR_comment=[DEV]${{ secrets.COMMENT }}" >> $GITHUB_ENV
          echo "TF_VAR_env=dev" >> $GITHUB_ENV
      - id: init
        run: |
          terraform init -backend-config="bucket=${{ env.STATE_BUCKET }}" -backend-config="key=${{ env.STATE_PATH }}"
        working-directory: ./bin/main
      - id: plan
        run: |
          terraform plan -no-color
        working-directory: ./bin/main
        continue-on-error: true
      - run: echo ${{ steps.plan.outputs.stdout }}
        continue-on-error: true
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}